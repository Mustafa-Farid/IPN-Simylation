



CREATE COMPUTE MODULE addAccount_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();

		DECLARE accountKey CHARACTER InputRoot.HTTPInputHeader."Account-Key";
		DECLARE atmPin CHARACTER InputRoot.HTTPInputHeader."Atm-Pin";
		DECLARE cardNum CHARACTER InputRoot.HTTPInputHeader."Card-Number";

		DECLARE rowData ROW;
		DECLARE query CHARACTER 'SELECT * FROM bank_one.accounts WHERE cardNum = ?';
		SET rowData = PASSTHRU(query VALUES(cardNum));

		IF rowData.cardNum IS NULL THEN
			SET OutputRoot.HTTPResponseHeader."X-Original-HTTP-Status-Code" = 404;
			SET OutputRoot.JSON.Data.message = 'card number not exist';
		ELSEIF rowData.atmPin = atmPin THEN
			DECLARE rowUpdate ROW;
			DECLARE query CHARACTER 'UPDATE bank_one.accounts SET accountKey = ? WHERE (cardNum = ?);';
			SET rowUpdate = PASSTHRU(query VALUES(accountKey, cardNum));
			SET OutputRoot.HTTPResponseHeader."X-Original-HTTP-Status-Code" = 200;
			SET OutputRoot.JSON.Data.message = 'account added successfully';
		ELSE
			SET OutputRoot.HTTPResponseHeader."X-Original-HTTP-Status-Code" = 404;
			SET OutputRoot.JSON.Data.message = 'Somthing Error';
		END IF;

		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;